name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }} # <-- Better to hash pyproject.toml
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        # Install package in editable mode with the 'dev' dependencies
        pip install -e ".[dev]"

    - name: Lint and format with Ruff
      run: |
        ruff check .
        ruff format --check .

    - name: Run unit tests with pytest
      run: |
        pytest

    - name: Scan codebase with EnvShield
      run: |
        # The tool is already installed via 'pip install -e', so just run it
        envshield scan . --config .github/envshield.ci.yml